<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.github.cimsbioko.server.dao" />

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${dbDriver}"/>
        <property name="url" value="${dbUrl}"/>
        <property name="username" value="${dbUser}"/>
        <property name="password" value="${dbPass}"/>
        <property name="validationQuery" value="SELECT 1"/>
        <property name="testOnBorrow" value="true"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" depends-on="flyway">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <value>com.github.cimsbioko.server.domain.model.AsyncTask</value>
                <value>com.github.cimsbioko.server.domain.model.AuditableCollectedEntity</value>
                <value>com.github.cimsbioko.server.domain.model.AuditableEntity</value>
                <value>com.github.cimsbioko.server.domain.model.Death</value>
                <value>com.github.cimsbioko.server.domain.model.FieldWorker</value>
                <value>com.github.cimsbioko.server.domain.model.Individual</value>
                <value>com.github.cimsbioko.server.domain.model.InMigration</value>
                <value>com.github.cimsbioko.server.domain.model.Location</value>
                <value>com.github.cimsbioko.server.domain.model.LocationHierarchy</value>
                <value>com.github.cimsbioko.server.domain.model.LocationHierarchyLevel</value>
                <value>com.github.cimsbioko.server.domain.model.Membership</value>
                <value>com.github.cimsbioko.server.domain.model.MigrationType</value>
                <value>com.github.cimsbioko.server.domain.model.Outcome</value>
                <value>com.github.cimsbioko.server.domain.model.OutMigration</value>
                <value>com.github.cimsbioko.server.domain.model.PregnancyObservation</value>
                <value>com.github.cimsbioko.server.domain.model.PregnancyOutcome</value>
                <value>com.github.cimsbioko.server.domain.model.Privilege</value>
                <value>com.github.cimsbioko.server.domain.model.Relationship</value>
                <value>com.github.cimsbioko.server.domain.model.Residency</value>
                <value>com.github.cimsbioko.server.domain.model.Role</value>
                <value>com.github.cimsbioko.server.domain.model.Round</value>
                <value>com.github.cimsbioko.server.domain.model.SocialGroup</value>
                <value>com.github.cimsbioko.server.domain.model.User</value>
                <value>com.github.cimsbioko.server.domain.model.Visit</value>
                <value>com.github.cimsbioko.server.domain.model.ErrorLog</value>
                <value>com.github.cimsbioko.server.domain.model.Error</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">${hibernateShowSql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernateExport}</prop>
                <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory
                </prop>
                <prop key="hibernate.jdbc.use_streams_for_binary"></prop>
                <prop key="hibernate.jdbc.batch_size">0</prop>
                <prop key="hibernate.dialect">${hibernateDialect}</prop>
                <prop key="javax.persistence.validation.mode">NONE</prop>
            </props>
        </property>
    </bean>

    <!-- transaction configuration delegates responsibility for transaction
        management -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Introduction Advisor that looks for a DynamicFinder annotation on methods -->
    <!-- Refer to http://www.ibm.com/developerworks/java/library/j-genericdao.htm -->
    <bean id="dynamicFinderAdvisor" class="com.github.cimsbioko.server.dao.finder.Advisor"/>

    <tx:annotation-driven/>

    <!-- dao configuration -->

    <!-- All entity DAOs should inhert from this bean -->
    <bean id="baseDao" class="com.github.cimsbioko.server.dao.service.impl.BaseDaoImpl"
          abstract="true">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="namingStrategy">
            <bean class="com.github.cimsbioko.server.dao.finder.AnnotationNamingStrategy"/>
        </property>
        <property name="argumentTypeFactory">
            <bean class="com.github.cimsbioko.server.dao.finder.SimpleArgumentTypeFactory"/>
        </property>
    </bean>


    <!-- A proxy that contains an introduction advisor -->
    <!-- Any bean that uses the DynamicFinder annotation should use this bean
        as its parent -->
    <bean id="dynamicDao" class="org.springframework.aop.framework.ProxyFactoryBean"
          abstract="true">
        <property name="interceptorNames">
            <list>
                <value>dynamicFinderAdvisor</value>
            </list>
        </property>
    </bean>

    <!-- The UserDao interface makes use of the DynamicFinder annotation so
        must inherit from dynamicDao bean -->
    <bean id="userDao" parent="dynamicDao">
        <property name="proxyInterfaces" value="com.github.cimsbioko.server.dao.service.UserDao"/>
        <property name="target">
            <bean parent="baseDao">
                <constructor-arg value="com.github.cimsbioko.server.domain.model.User"/>
            </bean>
        </property>
    </bean>

    <bean id="openhdsUserDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.User"/>
    </bean>

    <bean id="deathDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.Death"/>
    </bean>

    <bean id="fieldWorkerDao" parent="baseDao"
          class="com.github.cimsbioko.server.dao.service.impl.FieldWorkerDaoImpl">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.FieldWorker"/>
        <property name="properties" ref="siteProperties"/>
    </bean>

    <bean id="individualDao" parent="baseDao"
          class="com.github.cimsbioko.server.dao.service.impl.IndividualDaoImpl">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.Individual"/>
        <property name="properties" ref="siteProperties"/>
    </bean>

    <bean id="inMigrationDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.InMigration"/>
    </bean>

    <bean id="locationDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.Location"/>
    </bean>

    <bean id="locationHierarchyDao" parent="baseDao"
          class="com.github.cimsbioko.server.dao.service.impl.LocationHierarchyDaoImpl">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.LocationHierarchy"/>
    </bean>

    <bean id="locationHierarchyLevelDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.LocationHierarchyLevel"/>
    </bean>

    <bean id="membershipDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.Membership"/>
    </bean>

    <bean id="outMigrationDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.OutMigration"/>
    </bean>

    <bean id="pregnancyDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.PregnancyOutcome"/>
    </bean>

    <bean id="pregnancyObservationDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.PregnancyObservation"/>
    </bean>

    <bean id="relationshipDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.Relationship"/>
    </bean>

    <bean id="residencyDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.Residency"/>
    </bean>

    <bean id="roleDao" parent="baseDao"
          class="com.github.cimsbioko.server.dao.service.impl.RoleDaoImpl">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.Role"/>
    </bean>

    <bean id="roundDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.Round"/>
    </bean>

    <bean id="socialGroupDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.SocialGroup"/>
    </bean>

    <bean id="taskDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.AsyncTask"/>
    </bean>

    <bean id="visitDao" parent="baseDao">
        <constructor-arg value="com.github.cimsbioko.server.domain.model.Visit"/>
    </bean>

    <bean id="flywayTemplate" class="org.flywaydb.core.Flyway" abstract="true">
        <property name="locations" value="classpath:/db/migrations"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="baselineOnMigrate" value="true"/>
        <property name="baselineVersion">
            <bean class="org.flywaydb.core.api.MigrationVersion" factory-method="fromVersion">
                <constructor-arg value="2"/>
            </bean>
        </property>
    </bean>

    <beans profile="!migratedb">
        <bean id="flyway" parent="flywayTemplate"/>
    </beans>
    <beans profile="migratedb">
        <bean id="flyway" parent="flywayTemplate" init-method="migrate"/>
    </beans>

</beans>