<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="databaseConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:/META-INF/build-info.properties</value>
                <value>classpath:database.properties</value>
                <value>classpath:location-levels.properties</value>
                <value>classpath:codes.properties</value>
                <!-- linux-specific local configuration -->
                <value>file:/etc/openhds/*.properties</value>
                <value>file:${user.home}/.config/openhds/*.properties</value>
                <!-- Mac-specific local configuration -->
                <value>file:${user.home}/Library/Preferences/OpenHDS/*.properties</value>
                <!-- Windows-specific local configuration -->
                <value>file:${user.home}/Local Settings/Application Data/OpenHDS/*.properties</value>
            </list>
        </property>
    </bean>

    <import resource="classpath:/META-INF/spring/domainApplicationContext.xml"/>
    <import resource="classpath:/META-INF/spring/daoApplicationContext.xml"/>
    <import resource="classpath:/META-INF/spring/controllerSecurityContext.xml"/>
    <import resource="classpath:/META-INF/spring/errorhandlingApplicationContext.xml"/>
    <import resource="classpath:/META-INF/spring/taskContext.xml"/>
    <import resource="classpath:/META-INF/spring/webApplicationContext.xml"/>

    <bean id="authSuccessHandler" parent="baseTransactionBean">
        <property name="target">
            <bean class="org.openhds.web.security.AuthenticationSuccessHandler">
                <constructor-arg ref="userDao"/>
            </bean>
        </property>
    </bean>

    <bean id="logoutSuccessHandler" parent="baseTransactionBean">
        <property name="target">
            <bean class="org.openhds.web.security.LogoutSuccessHandler">
                <constructor-arg ref="userDao"/>
            </bean>
        </property>
    </bean>

    <bean id="prefLocale" class="org.openhds.web.util.Locale">
        <property name="locale" value="#{siteProperties.locale}"/>
    </bean>

    <!-- Configure Spring Security -->
    <security:http auto-config="true" use-expressions="true">
        <security:form-login
                authentication-success-handler-ref="authSuccessHandler" login-page="/login.faces"
                login-processing-url="/loginProcess" authentication-failure-url="/login.faces?login_error=1"/>
        <security:intercept-url pattern="/login.faces" access="permitAll()"/>
        <security:intercept-url pattern="/resources/images/**" access="permitAll()"/>
        <security:intercept-url pattern="/resources/css/main.css" access="permitAll()"/>
        <security:intercept-url pattern="/resources/css/login.css" access="permitAll()"/>
        <security:intercept-url pattern="/logout.faces" access="permitAll()"/>
        <security:intercept-url pattern="/primefaces_resource/**" access="permitAll()"/>
        <security:intercept-url pattern="/javax.faces.resource/**" access="permitAll()"/>
        <security:intercept-url pattern="/module/dsl/binding-def/**" access="permitAll()"/>
        <security:intercept-url pattern="/module/dsl/validation" access="permitAll()"/>
        <security:intercept-url pattern="/favicon.ico" access="permitAll()"/>
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/api/rest/**" access="isAuthenticated()"/>
        <security:logout logout-url="/logoutProcess" success-handler-ref="logoutSuccessHandler"/>
    </security:http>

    <bean id="timestampConverter" class="org.openhds.web.cvt.TimeStampConverter">
        <constructor-arg value="#{siteProperties.dateFormat}"/>
    </bean>

    <!-- Entity Converters -->
    <bean id="fieldWorkerConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="fieldWorkerDao"/>
        <constructor-arg value="org.openhds.domain.model.FieldWorker"/>
        <constructor-arg value="java.lang.String"/>
    </bean>

    <bean id="roleConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="roleDao"/>
        <constructor-arg value="org.openhds.domain.model.Role"/>
        <constructor-arg value="java.lang.String"/>
    </bean>

    <bean id="userConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="userDao"/>
        <constructor-arg value="org.openhds.domain.model.User"/>
        <constructor-arg value="java.lang.String"/>
    </bean>

    <bean id="jsfService" class="org.openhds.web.service.impl.JsfServiceImpl"/>

    <bean id="entityService" parent="baseTransactionBean">
        <property name="target">
            <bean class="org.openhds.controller.service.impl.EntityServiceImpl">
                <constructor-arg ref="genericDao"/>
                <constructor-arg ref="currentUser"/>
                <constructor-arg ref="calendarUtil"/>
                <constructor-arg ref="siteProperties"/>
                <constructor-arg ref="entityValidator"/>
            </bean>
        </property>
    </bean>

    <bean id="entityValidator"
          class="org.openhds.web.service.impl.EntityValidationServiceJsfImpl">
        <constructor-arg ref="siteProperties"/>
        <constructor-arg ref="jsfService"/>
    </bean>

    <bean id="userService" parent="baseServiceBean">
        <property name="target">
            <bean class="org.openhds.web.service.impl.UserServiceImpl">
                <constructor-arg name="genericDao" ref="genericDao"/>
            </bean>
        </property>
    </bean>

    <bean id="navController" class="org.openhds.web.ui.NavigationMenuBean" scope="session">
        <aop:scoped-proxy/>
    </bean>

    <bean id="baseCrud" abstract="true">
        <property name="jsfService" ref="jsfService"/>
        <property name="entityService" ref="entityService"/>
        <property name="genericDao" ref="genericDao"/>
        <property name="navMenuBean" ref="navController"/>
    </bean>

    <bean id="fieldWorkerCrud" scope="session" parent="baseCrud" class="org.openhds.web.crud.impl.FieldWorkerCrudImpl">
        <aop:scoped-proxy proxy-target-class="false"/>
        <constructor-arg value="org.openhds.domain.model.FieldWorker"/>
        <property name="dao" ref="fieldWorkerDao"/>
        <property name="converter" ref="fieldWorkerConverter"/>
    </bean>

    <bean id="roleCrud" scope="session" parent="baseCrud" class="org.openhds.web.crud.impl.RoleCrudImpl">
        <aop:scoped-proxy proxy-target-class="false"/>
        <constructor-arg value="org.openhds.domain.model.Role"/>
        <property name="dao" ref="roleDao"/>
        <property name="converter" ref="roleConverter"/>
        <property name="service" ref="roleService"/>
    </bean>

    <bean id="userCrud" scope="session" parent="baseCrud" class="org.openhds.web.crud.impl.UserCrudImpl">
        <aop:scoped-proxy proxy-target-class="false"/>
        <constructor-arg value="org.openhds.domain.model.User"/>
        <property name="dao" ref="userDao"/>
        <property name="converter" ref="userConverter"/>
        <property name="service" ref="userService"/>
    </bean>

    <!-- Beans -->
    <bean id="taskBean" class="org.openhds.web.beans.TaskBean" init-method="scheduleAllTasks">
        <constructor-arg ref="openhdsTaskExecutor"/>
        <constructor-arg ref="asyncTaskServiceImpl"/>
        <constructor-arg ref="taskScheduler"/>
    </bean>

    <bean id="siteProperties"
          class="org.openhds.domain.service.impl.SitePropertiesServiceImpl">
        <property name="locale">
            <value>${locale}</value>
        </property>
        <property name="dateFormat">
            <value>${dateFormat}</value>
        </property>
        <property name="unknownIdentifier">
            <value>${unknownIdentifier}</value>
        </property>
        <property name="inmigrationCode">
            <value>${inmigration}</value>
        </property>
        <property name="outmigrationCode">
            <value>${outmigration}</value>
        </property>
        <property name="birthCode">
            <value>${birth}</value>
        </property>
        <property name="deathCode">
            <value>${death}</value>
        </property>
        <property name="enumerationCode">
            <value>${enumeration}</value>
        </property>
        <property name="marriageCode">
            <value>${marriage}</value>
        </property>
        <property name="notApplicableCode">
            <value>${notApplicable}</value>
        </property>
        <property name="liveBirthCode">
            <value>${liveBirth}</value>
        </property>
        <property name="stillBirthCode">
            <value>${stillBirth}</value>
        </property>
        <property name="miscarriageCode">
            <value>${miscarriage}</value>
        </property>
        <property name="abortionCode">
            <value>${abortion}</value>
        </property>
        <property name="maleCode">
            <value>${male}</value>
        </property>
        <property name="femaleCode">
            <value>${female}</value>
        </property>
        <property name="dataStatusWarningCode">
            <value>${dataStatusWarning}</value>
        </property>
        <property name="dataStatusValidCode">
            <value>${dataStatusValid}</value>
        </property>
        <property name="dataStatusFatalCode">
            <value>${dataStatusFatal}</value>
        </property>
        <property name="dataStatusVoidCode">
            <value>${dataStatusVoid}</value>
        </property>
        <property name="dataStatusPendingCode">
            <value>${dataStatusPending}</value>
        </property>
        <property name="dataStatusClosedCode">
            <value>${dataStatusClosed}</value>
        </property>
        <property name="minimumAgeOfParents">
            <value>${minAgeOfParenthood}</value>
        </property>
        <property name="minimumAgeOfHouseholdHead">
            <value>${minAgeOfHouseholdHead}</value>
        </property>
        <property name="minimumAgeOfMarriage">
            <value>${minAgeOfMarriage}</value>
        </property>
        <property name="minimumAgeOfPregnancy">
            <value>${minAgeOfPregnancy}</value>
        </property>
        <property name="yesResponse">
            <value>${yesResponse}</value>
        </property>
        <property name="noResponse">
            <value>${noResponse}</value>
        </property>
        <property name="earliestEnumerationDate">
            <value>${earliestEnumerationDate}</value>
        </property>
        <property name="specialStudyLocation">
            <value>${openhds.specialStudyLocation}</value>
        </property>
    </bean>

</beans>
